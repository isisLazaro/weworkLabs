{"version":3,"sources":["Components/Modal/Modal.js","Components/Register/Register.js","Components/Home/Home.js","Components/Confirm/Confirm.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","modal","width","fontSize","display","flexDirection","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","React","useState","open","setOpen","handleClose","className","onClick","Modal","aria-labelledby","aria-describedby","id","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Register","props","e","preventDefault","localStorage","setItem","JSON","stringify","state","name","Date","firebase","collection","add","mail","dateHour","hour","date","discapacidad","then","docRef","console","log","setState","valid","catch","error","onChange","target","value","AddEmail","ChangeState","ChangeHour","ChangeDate","class","for","type","placeholder","this","required","Button","variant","to","Welcome","Component","ConfirmData","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8648016.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport '../Modal/Modal.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    width: '100%',\r\n    fontSize: '15px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn-modal\"onClick={handleOpen}>\r\n        Aviso de Privacidad\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        id=\"style-modal\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Aviso de privacidad</h2>\r\n            <p id=\"transition-modal-description\">\r\n\r\nEl presente aviso de privacidad se establece en cumplimiento de lo dispuesto en la Ley Federal de Protección de Datos Personales en Posesión de los Particulares.\r\n\r\n“NOMBRE DE LA EMPRESA O PERSONA FISICA”, con domicilio en ” AQUI SE COLOCA EL DOMICILIO COMPLETO”, México, es responsable de recabar sus datos personales, del uso que se le dé a los mismos y de su protección. Su información personal será utilizada para proveer los servicios y productos que ha solicitado, informarle sobre cambios en los mismos y evaluar la calidad del servicio que le brindamos.\r\n\r\nPara las finalidades señaladas en el presente aviso de privacidad, podemos recabar sus datos personales de distintas formas: cuando usted nos los proporciona directamente; cuando visita nuestro sitio de Internet o utiliza nuestros servicios en línea, y cuando obtenemos información a través de otras fuentes que están permitidas por la ley. Recabamos sus datos personales de forma directa cuando usted mismo nos los proporciona por diversos medios, como cuando nos contacta o nos da información con objeto de que le prestemos un servicio. Los datos que obtenemos por este medio pueden ser, entre otros: Su nombre, correo electrónico (email), país y ciudad , páginas visitadas dentro de nuestro sitio, información para mejorar su experiencia en nuestro sitio como resolución de pantalla, explorador y tipo de sistema operativo utilizado. Usted tiene derecho de acceder, rectificar y cancelar sus datos personales, así como de oponerse al tratamiento de los mismos o revocar el consentimiento que para tal fin nos haya otorgado, a través de los procedimientos que hemos implementado.</p>\r\n<button className=\"ok\" onClick={handleClose}>Entendido</button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport './Register.css';\r\n// import { input } from '@material-ui/core';\r\nimport TransitionsModal from '../Modal/Modal';\r\nimport { Button } from '@material-ui/core';\r\nimport * as firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport Welcome from '../Home/Home'\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name:\"\",\r\n          mail:\"\",\r\n          hour:\"\", \r\n          date:\"\",\r\n          discapacidad:\"No\"\r\n          \r\n          \r\n        };\r\n      }\r\n      \r\n    onClick = (e) =>{\r\n    e.preventDefault();\r\n    localStorage.setItem(\"name\", JSON.stringify(this.state.name));\r\n    // localStorage.setItem(\"orden\", JSON.stringify(this.state.value));\r\n    // history.push(this.props.ruta);\r\n      \r\n      const currentDate = new Date();\r\n      const db = firebase.firestore();\r\n      \r\n      \r\n        db.collection('visitas').add({\r\n            name:this.state.name,\r\n            mail:this.state.mail,\r\n            dateHour: this.state.hour,\r\n            date: this.state.date,\r\n           \r\n            discapacidad:this.state.discapacidad\r\n        \r\n      })\r\n        .then((docRef) => {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n            this.setState({valid:true})\r\n            \r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n        )    \r\n        \r\n    }  \r\n    onChange = e => {\r\n        this.setState({\r\n            name: e.target.value,\r\n            \r\n        });\r\n        \r\n       // localStorage.setItem(\"name\", JSON.stringify(this.state.name));\r\n        // localStorage.setItem(\"email\", JSON.stringify(this.state.email));\r\n\r\n      };\r\n\r\n    AddEmail = e => {\r\n      this.setState({\r\n        mail: e.target.value\r\n    });\r\n    }\r\n\r\n   // AddAnfitrion = e => {\r\n    //  this.setState({\r\n     //   anfitrion: e.target.value\r\n   // });\r\n  //  }\r\n    ChangeState = e => {\r\n      this.setState({\r\n        discapacidad:\"Si\"\r\n      })\r\n    }\r\n    ChangeHour = e =>{\r\n        this.setState({\r\n            hour:e.target.value\r\n        })\r\n    }\r\n    ChangeDate = e =>{\r\n        this.setState({\r\n            date:e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n       return (\r\n           <section className=\"section-register\">\r\n               <div className=\"register-tittle\">\r\n                  <label>¿Quién te visita?</label>\r\n               </div>\r\n               <div class=\"register-container\">\r\n                   <label for=\"\">Nombre Completo</label>\r\n                   <input type=\"text\" name=\"name\" placeholder=\"Nombre completo\"\r\n                   onChange={this.onChange}/>\r\n                   <label for=\"\">Dirección de correo</label>\r\n                   <input type=\"text\" name=\"name\"\r\n                   onChange={this.AddEmail}/>\r\n                   <label for=\"\">Input date</label>\r\n                   <input type=\"date\" required onChange={this.ChangeDate }/>\r\n                   <label for=\"\">Hora de la visita</label>\r\n                   <input type=\"time\"  onChange={this.ChangeHour}\r\n                   />\r\n               </div>\r\n               <div className=\"needs\">\r\n                 <input type='radio' className=\"chk\"\r\n                 onChange={this.ChangeState}/>\r\n                   <p class=\"txt-needs\">¿Tienes alguna discapacidad o requieres asistencia?</p>\r\n               </div>\r\n                   <div className=\"sig\">\r\n                     <Button variant=\"contained\" onClick={this.onClick}>Siguiente</Button>\r\n                   </div>\r\n                   <div className=\"sig\">\r\n                   <Link to=\"/home\">\r\n                   <Button variant=\"contained\" onClick={Welcome}>Regresar</Button>\r\n                   </Link>\r\n                   </div>\r\n           </section>\r\n       )\r\n\r\n    }\r\n}\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TransitionsModal from '../Modal/Modal';\r\n// import Select from '../utils/Select'\r\nimport Register from '../Register/Register';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Welcome extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"section-welcome\">\r\n                <div className=\"welcome-tittle\">\r\n                   <label>Wework Labs App</label>\r\n                   <select class=\"custom-select\">\r\n                       <option>Idioma</option>\r\n                       <option>Español</option>\r\n                       <option>English</option>\r\n                   </select>\r\n                </div>\r\n                <div className=\"welcome-btn\">\r\n                   <div className=\"btn-col1\">\r\n                   <Link to=\"/register\">\r\n                   <Button variant=\"contained\" onClick={Register}>Agendar visita</Button>\r\n                   </Link>\r\n                   </div>\r\n                </div>\r\n                <div className=\"privacity\">\r\n                     <TransitionsModal/>\r\n                   </div> \r\n            </section> \r\n        )}}\r\n        \r\n\r\n export default Welcome;","import React, { Component } from 'react';\r\nimport './Confirm.css';\r\nimport Register from '../Register/Register';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass ConfirmData extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"section-confirm\">\r\n                <div className=\"confirm-tittle\">\r\n                    <label>Confirma tus datos</label>\r\n                </div>\r\n                <div className=\"confirm-btn\">\r\n                    <div className=\"btn-col1\">\r\n                        <Link to=\"/\">\r\n                            <Button variant=\"contained\">Confirmar</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"btn-col1\">\r\n                        <Link to=\"/register\">\r\n                            <Button variant=\"contained\">Regresar</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ConfirmData;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\n// import Home from './Components/Home/Home';\r\nimport Welcome from './Components/Home/Home'\r\nimport ConfirmData from './Components/Confirm/Confirm'\r\n\r\n\r\nimport Register from './Components/Register/Register';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAn3GbL2dZH4z-J4YHX0jlwZXK8YRbu8Bs\",\r\n    authDomain: \"talent-fest-6406d.firebaseapp.com\",\r\n    databaseURL: \"https://talent-fest-6406d.firebaseio.com\",\r\n    projectId: \"talent-fest-6406d\",\r\n    storageBucket: \"talent-fest-6406d.appspot.com\",\r\n    messagingSenderId: \"626058194427\",\r\n    appId: \"1:626058194427:web:64bd471648b84936f22f5e\",\r\n    measurementId: \"G-YDZWYEP3P6\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconsole.log(firebaseConfig);\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Route exact path='/register' component={Register} />\r\n      <Route  path='/home' component={Welcome} />\r\n      <Route  path='/confirm' component={ConfirmData} />\r\n      {/* <Route path='/search' component={Search} /> */}\r\n\r\n\r\n    \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}